# sentiment_words.py
positive_words =list(set( [
    'صحة', 'سلام', 'فرحة', 'نجاح', 'باهي', 'زهر', 'تحية', 'خدمة','هايلة',"مليحة","هبال",
    'مبروك', 'فرصة', 'عزيمة', 'سعادة', 'محبة', 'أمل', 'حب', 'ابتسامة','أحسن','مخير',"المخير",
    'تقدير', 'مساعدة', 'صديق', 'متميز', 'طموح', 'جمال', 'رايق', 'مليح',
    'غزال', 'قوي', 'جيد', 'مليح', 'مسرور', 'مبدع', 'حماسة', 'طيب',
    'مشجّع', 'رفيق', 'مؤمن', 'ممتاز', 'شجاعة', 'مشرق', 'متميز', 'معتدل',
    'سمح', 'مرتاح', 'مبهج', 'حظ', 'مبتهج', 'محمود', 'رفعة', 'متفائل',
    'منير', 'عزيز', 'محتشم', 'مخلص', 'قوي', 'ما شاء الله', 'مفيدة',
    'راحة', 'مرضي', 'صادق', 'رفيع', 'مشهور', 'مبهور', 'مفخرة', 'مسرحي',
    'مقدّس', 'ماهر', 'ناجح', 'معروف', 'مقبول', 'مقبول', 'مبارك',
    'مشرق', 'مأخوذ', 'جميل', 'فنان', 'موهوب', 'مبدع', 'ذكي', 'محترم',
    'معافى', 'مرموق', 'قادر', 'رائع', 'مشهور', 'متحرر', 'شجاع',
    'مستقل', 'مستديم', 'مترفع', 'أصيل', 'معطاء', 'محبوب', 'سخي',
    'متسامح', 'مكرم', 'مفتخر', 'مليء', 'متزن', 'مفهوم', 'محيط',
    'مفتوح', 'مدين', 'مؤثر', 'عطوف', 'توفيق', 'محمود', 'قيمة',
    'مسؤول', 'مُشرّف', 'عزّة', 'مؤهل', 'مرشد', 'منظّم', 'مؤسسة',
    'مبدع', 'محتسب', 'نزيه', 'ممتن', 'ملهم', 'ممتع', 'مشوق',
    'حيوي', 'صحيح', 'صحيح', 'حازم', 'مفصلي', 'مقنع', 'مستحب',
    'كريم', 'نشيط', 'متحمس', 'مدعوم', 'مشتعل', 'منفتح', 'مشجع',
    'ذكي', 'متفائل', 'مفعم', 'متجاوب', 'مستعد', 'مستشعر', 'رائع',
    'موهوب', 'مميز', 'مدعوم', 'مغذي', 'نبيل', 'مدرك', 'معزز',
    'معاين', 'مشرق', 'مستعد', 'مجدّد', 'مقدّر', 'متحمس', 'محفز',
    'مستقر', 'مُلهِم', 'مرتاح', 'معتمد', 'مكرّم', 'مؤثر', 'متحرر',
    'معالج', 'مقبول', 'ممنوح', 'متعاون', 'مُحتفل', 'محترم', 'مبشر',
    'منجز', 'مكرم', 'صامد', 'معتبر', 'مُنضبط', 'محسود', 'محظوظ',
    'متمكن', 'مُبدع', 'مقدّس', 'مُقدّر', 'مستشار', 'متوافق', 'مليء',
    'مرن', 'محسن', 'محظوظ', 'مقبول', 'معزز', 'مفعم', 'مستقل',
    'مشوّق', 'مبدع', 'مشرق', 'مستمر', 'محظوظ', 'مُعتبر', 'مدعوم',
    'مؤهّل', 'مُعطّر', 'مستقر', 'ممنوع', 'مُحتفل', 'محسّن', 'منجز',
    'مرتاح', 'متواضع', 'مُنظّم', 'مُبدع', 'متفاعل', 'معزّز', 'مُكرّم',
    'مستقبل', 'مكافح', 'محارب', 'مخلص', 'مرموق', 'معتدل', 'مبدع',
    'مستقل', 'مُحسّن', 'مرن', 'مُعتبر', 'مميز', 'مُبدع', 'مَعتبر',
    'مُشرّف', 'مُشرق', 'مؤثر', 'مكرّم', 'مُميز', 'مستقل', 'معنوي',
    'مُفكّر', 'مُتحرر', 'مُستشار', 'مُستمتع', 'معزّز', 'مُبدع',
    'مُستعد', 'مُثير', 'مُستقبل', 'مُتميّز', 'مُشارِك', 'مستديم',
    'مُتحمّس', 'مُسخّر', 'مُثمر', 'مؤهّل', 'مُستحب', 'مُعزّز',
    'مُكرّم', 'مُستمر', 'مُستمتع', 'مُؤسّس', 'مُشجّع', 'مُعطّر',
    'مفرد', 'مُشجع', 'مؤثّر', 'محتفل', 'مبدع', 'معزّز', 'مؤثر',
    'مَعتبر', 'مُتفائل', 'مُبهج', 'مُشرّف', 'مُمتع', 'مُبدع',
    'مُحسّن', 'مَدهش', 'مُتفائل', 'مُحسّن', 'مُبهج', 'مُشرّف',
    'مُشارِك', 'مُسخّر', 'مُكافح', 'مُشجّع', 'مُستقبل', 'مُرتفع',
    'مُسير', 'مُستعد', 'مُشجع', 'مُفكّر', 'مستقر', 'مُحترم',
    'مُبتكر', 'مُشرف', 'مُعيّن', 'مُتسامح', 'مُجدد', 'مُهتم',
    'مُشرّف', 'مُبتهج', 'مُؤسِّس', 'مُعطّر', 'مُميز', 'مُفعم',
    'مُؤهل', 'مُتميز', 'مُتعلم', 'مُشرف', 'مُذهل', 'مُعزز',
    'مُستقيم', 'مُعزّز', 'مُصطفي', 'مُبدع', 'مُوجّه', 'مُحتفل',
    'مُحسّن', 'مستقبل', 'مُشرّف', 'مُرتفع', 'مُبدع', 'مُعيّن',
    'مُصمّم', 'مُفكّر', 'مُؤهل', 'مُجدّد', 'مُساعد', 'مُدرّب',
    'مُثمّر', 'مُستشار', 'مُشرّف', 'مُبدع', 'مُخترع', 'مُشجع',
    'مُحسّن', 'مُثمر', 'مُؤثر', 'مُعتبر', 'مُتميّز', 'مُبدع',"مريقل",
    "مريقلة","شباب","شابة"
]))
negative_words = list(set([
    'مضايقة', 'تعبانة', 'سافل', 'عوج', 'مللي', 'مكلخ', 'خاوي', 'تخبيط',"مقودة","مقود","مرنكة","مرنك",
    'محروقة', 'مستحقرة', 'مفزوع', 'كاسر', 'مقعّط', 'مملول', 'صعيبة',
    'غاضب', 'مأكول', 'مبهدل', 'محروم', 'مدفون', 'مسكين', 'محصن',
    'مغترب', 'محبط', 'محتقر', 'مشيش', 'معكر', 'محور', 'معكر',
    'مطروح', 'متأزم', 'مشوش', 'محروم', 'خاوي', 'مستحيل', 'سايب',
    'مخمور', 'مسكر', 'مدعوش', 'مسطول', 'مفرغ', 'مضطر', 'مسكين',
    'عاطل', 'مسلط', 'مسخوط', 'محروم', 'مدروش', 'مستحيل', 'مكلخ',
    'مغترب', 'مجرم', 'مخربط', 'مغسول', 'محروق', 'معقد', 'ملخوم',
    'معقد', 'معياش', 'مقرف', 'متضايق', 'مستصغر', 'مهزوم', 'مطرود',
    'محفوظ', 'مكسر', 'مفلس', 'مقرف', 'مبلبل', 'مشوش', 'متخلف',
    'معقد', 'مسحوق', 'متشرد', 'معوق', 'معيّط', 'مفروغ', 'مغشوش',
    'مقلق', 'مكتئب', 'معذب', 'مسعور', 'محو', 'مغلق', 'معقد',
    'مسخرة', 'مفترس', 'مغسول', 'معطل', 'مجهد', 'مشتت', 'محروق',
    'محروم', 'موسوس', 'مضطرب', 'معذب', 'مخدّر', 'مكروب', 'مقلوب',
    'مكسّر', 'مضاد', 'مشبوه', 'مضطرب', 'معوّق', 'مخنوق', 'مخنوق',
    'مسكين', 'مطرود', 'مستضعف', 'مأكول', 'منزوع', 'معكوس', 'مضغوط',
    'محبوس', 'مشتت', 'محروم', 'مضرب', 'مستغل', 'مخزّن', 'مشتت',
    'مشوّه', 'معلول', 'مزيّف', 'متمرد', 'منبوذ', 'محبط', 'منقوص',
    'مغترب', 'مربوط', 'محسود', 'مسير', 'متضارب', 'محلّل', 'مركب',
    'معاق', 'محير', 'محفوف', 'مدحور', 'منسي', 'مدحور', 'مدمر',
    'مستبد', 'منحدر', 'مشتت', 'محجوز', 'مقيّد', 'مخربط', 'مدحور',
    'مجهول', 'مدغدغ', 'محروق', 'محسور', 'محاصر', 'مهدور', 'معاق',
    'محجوز', 'مقيد', 'معقد', 'مراوغ', 'مضغوط', 'مخنوق', 'معزول',
    'مفرد', 'محروم', 'معوّق', 'مستحي', 'مسور', 'منافق', 'معطل',
    'محروم', 'مقطوع', 'محتقر', 'متأزم', 'مجنون', 'مخترع', 'متمرد',
    'مغلوب', 'مكرّب', 'مضطر', 'معلول', 'محفوظ', 'محسن', 'مربوط',
    'مستدرج', 'مكدر', 'مفزع', 'موجع', 'محرق', 'معقد', 'محترق',
    'مجزّر', 'مخدّر', 'مستفز', 'مفتقد', 'محارب', 'مغسول', 'محروم',
    'مستبد', 'محلول', 'موسوس', 'منبوذ', 'مستحوذ', 'مكرّر', 'مهدور',
    'مهرج', 'منسي', 'مكتئب', 'معزول', 'معطل', 'مستغفل', 'مجهد',
    'محتار', 'مفخخ', 'مقصوص', 'مغلق', 'متخبط', 'معذّب', 'مخربط',
    'مغفّل', 'محشور', 'محصور', 'محاصر', 'مدفوع', 'مملوء', 'مدغدغ'
]))


def add_positive_word(word):
    """Add a positive word to the positive_words list."""
    if word not in positive_words:
        positive_words.append(word)

def remove_positive_word(word):
    """Remove a positive word from the positive_words list."""
    if word in positive_words:
        positive_words.remove(word)

def add_negative_word(word):
    """Add a negative word to the negative_words list."""
    if word not in negative_words:
        negative_words.append(word)

def remove_negative_word(word):
    """Remove a negative word from the negative_words list."""
    if word in negative_words:
        negative_words.remove(word)

def count_sentiment_words(text):
    """## Count positive and negative words in the given text.
    ### return { 'pos': (2, ['word2', 'word1']), 'neg': (2, ['word2', 'word1']) }"""
    text_words = text.split()
    positive_count =  [word for word in text_words if word in positive_words]
    negative_count = [word for word in text_words if word in negative_words] 
    return {"pos":(len(positive_count),positive_count),"neg": (len(negative_count),negative_count)}



